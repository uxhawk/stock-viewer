{"ast":null,"code":"var _jsxFileName = \"/Users/uxhawk/dev/stock-viewer/src/utils/GlobalState.js\";\nimport React, { createContext, useReducer, useContext } from \"react\";\nimport { ADD_SYMBOLS } from \"./actions\";\nconst StoreContext = createContext();\nconst {\n  Provider\n} = StoreContext;\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_SYMBOLS':\n      return { ...state,\n        currentPost: action.post,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst StoreProvider = ({\n  value = [],\n  ...props\n}) => {\n  const [state, dispatch] = useReducer(reducer, {\n    marketList: ['S&P 500', 'Dow Jones', 'Nasdaq'],\n    autoFillSymbols: ['Edge', 'Chrome'],\n    watchList: [],\n    portfolio: []\n  });\n  return /*#__PURE__*/React.createElement(Provider, Object.assign({\n    value: [state, dispatch]\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }\n  }));\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };","map":{"version":3,"sources":["/Users/uxhawk/dev/stock-viewer/src/utils/GlobalState.js"],"names":["React","createContext","useReducer","useContext","ADD_SYMBOLS","StoreContext","Provider","reducer","state","action","type","currentPost","post","loading","StoreProvider","value","props","dispatch","marketList","autoFillSymbols","watchList","portfolio","useStoreContext"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,UAA3C,QAA6D,OAA7D;AACA,SACEC,WADF,QAEO,WAFP;AAIA,MAAMC,YAAY,GAAGJ,aAAa,EAAlC;AACA,MAAM;AAAEK,EAAAA;AAAF,IAAeD,YAArB;;AAEA,MAAME,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELG,QAAAA,WAAW,EAAEF,MAAM,CAACG,IAFf;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAMJ;AACE,aAAOL,KAAP;AATF;AAWD,CAZD;;AAcA,MAAMM,aAAa,GAAG,CAAC;AAAEC,EAAAA,KAAK,GAAG,EAAV;AAAc,KAAGC;AAAjB,CAAD,KAA8B;AAClD,QAAM,CAACR,KAAD,EAAQS,QAAR,IAAoBf,UAAU,CAACK,OAAD,EAAU;AAC5CW,IAAAA,UAAU,EAAE,CACR,SADQ,EAER,WAFQ,EAGR,QAHQ,CADgC;AAM5CC,IAAAA,eAAe,EAAE,CACf,MADe,EAEf,QAFe,CAN2B;AAU5CC,IAAAA,SAAS,EAAE,EAViC;AAW5CC,IAAAA,SAAS,EAAE;AAXiC,GAAV,CAApC;AAcA,sBAAO,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAACb,KAAD,EAAQS,QAAR;AAAjB,KAAwCD,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAhBD;;AAkBA,MAAMM,eAAe,GAAG,MAAM;AAC5B,SAAOnB,UAAU,CAACE,YAAD,CAAjB;AACD,CAFD;;AAIA,SAASS,aAAT,EAAwBQ,eAAxB","sourcesContent":["import React, { createContext, useReducer, useContext } from \"react\";\nimport {\n  ADD_SYMBOLS\n} from \"./actions\";\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_SYMBOLS':\n      return {\n        ...state,\n        currentPost: action.post,\n        loading: false\n      };\n\n  default:\n    return state;\n  }\n};\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useReducer(reducer, {\n    marketList: [\n        'S&P 500',\n        'Dow Jones',\n        'Nasdaq',\n    ],\n    autoFillSymbols: [\n      'Edge',\n      'Chrome'\n    ],\n    watchList: [],\n    portfolio: [],\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n"]},"metadata":{},"sourceType":"module"}