{"ast":null,"code":"var _jsxFileName = \"/Users/uxhawk/dev/stock-viewer/src/utils/GlobalState.js\";\nimport React, { createContext, useReducer, useContext } from \"react\";\nimport { ADD_SYMBOLS } from \"./actions\";\nconst StoreContext = createContext();\nconst {\n  Provider\n} = StoreContext;\n\nconst reducer = (state, action) => {\n  // switch (action.type) {\n  // case ADD_SYMBOLS:\n  //   return {\n  //     ...state,\n  //     autoFillSymbols: [action.symbols, ...state.autoFillSymbols], \n  //   };\n  if (action.type === ADD_SYMBOLS) {\n    return { ...state,\n      autoFillSymbols: [action.symbols, ...state.autoFillSymbols]\n    };\n  } else {\n    return state;\n  } // switch (action.type) {\n  //   case ADD_SYMBOLS:\n  //     return {\n  //       ...state,\n  //       currentPost: action.post,\n  //       loading: false\n  //     };\n  // default:\n  //   return state;\n  // }\n\n};\n\nconst StoreProvider = ({\n  value = [],\n  ...props\n}) => {\n  const [state, dispatch] = useReducer(reducer, {\n    marketList: ['S&P 500', 'Dow Jones', 'Nasdaq'],\n    autoFillSymbols: [],\n    watchList: [],\n    portfolio: []\n  });\n  return /*#__PURE__*/React.createElement(Provider, Object.assign({\n    value: [state, dispatch]\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 10\n    }\n  }));\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };","map":{"version":3,"sources":["/Users/uxhawk/dev/stock-viewer/src/utils/GlobalState.js"],"names":["React","createContext","useReducer","useContext","ADD_SYMBOLS","StoreContext","Provider","reducer","state","action","type","autoFillSymbols","symbols","StoreProvider","value","props","dispatch","marketList","watchList","portfolio","useStoreContext"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,UAA3C,QAA6D,OAA7D;AACA,SACEC,WADF,QAEO,WAFP;AAIA,MAAMC,YAAY,GAAGJ,aAAa,EAAlC;AACA,MAAM;AAAEK,EAAAA;AAAF,IAAeD,YAArB;;AAEA,MAAME,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC;AACA;AACA;AACA;AACA;AACA;AAEA,MAAIA,MAAM,CAACC,IAAP,KAAgBN,WAApB,EAAiC;AAC/B,WAAO,EACL,GAAGI,KADE;AAELG,MAAAA,eAAe,EAAE,CAACF,MAAM,CAACG,OAAR,EAAiB,GAAGJ,KAAK,CAACG,eAA1B;AAFZ,KAAP;AAID,GALD,MAKO;AACL,WAAOH,KAAP;AACD,GAfgC,CAiBjC;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACD,CA5BD;;AA8BA,MAAMK,aAAa,GAAG,CAAC;AAAEC,EAAAA,KAAK,GAAG,EAAV;AAAc,KAAGC;AAAjB,CAAD,KAA8B;AAClD,QAAM,CAACP,KAAD,EAAQQ,QAAR,IAAoBd,UAAU,CAACK,OAAD,EAAU;AAC5CU,IAAAA,UAAU,EAAE,CACR,SADQ,EAER,WAFQ,EAGR,QAHQ,CADgC;AAM5CN,IAAAA,eAAe,EAAE,EAN2B;AAO5CO,IAAAA,SAAS,EAAE,EAPiC;AAQ5CC,IAAAA,SAAS,EAAE;AARiC,GAAV,CAApC;AAWA,sBAAO,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE,CAACX,KAAD,EAAQQ,QAAR;AAAjB,KAAwCD,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAbD;;AAeA,MAAMK,eAAe,GAAG,MAAM;AAC5B,SAAOjB,UAAU,CAACE,YAAD,CAAjB;AACD,CAFD;;AAIA,SAASQ,aAAT,EAAwBO,eAAxB","sourcesContent":["import React, { createContext, useReducer, useContext } from \"react\";\nimport {\n  ADD_SYMBOLS\n} from \"./actions\";\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst reducer = (state, action) => {\n  // switch (action.type) {\n  // case ADD_SYMBOLS:\n  //   return {\n  //     ...state,\n  //     autoFillSymbols: [action.symbols, ...state.autoFillSymbols], \n  //   };\n\n  if (action.type === ADD_SYMBOLS) {\n    return {\n      ...state,\n      autoFillSymbols: [action.symbols, ...state.autoFillSymbols],\n    }\n  } else {\n    return state;\n  }\n\n  // switch (action.type) {\n  //   case ADD_SYMBOLS:\n  //     return {\n  //       ...state,\n  //       currentPost: action.post,\n  //       loading: false\n  //     };\n\n  // default:\n  //   return state;\n  // }\n};\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useReducer(reducer, {\n    marketList: [\n        'S&P 500',\n        'Dow Jones',\n        'Nasdaq',\n    ],\n    autoFillSymbols: [],\n    watchList: [],\n    portfolio: [],\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n"]},"metadata":{},"sourceType":"module"}